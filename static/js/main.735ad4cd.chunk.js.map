{"version":3,"sources":["serviceWorker.ts","configs/firebase.ts","contexts/messages.tsx","components/AnimatedList/AnimatedList.tsx","hooks/useMediaQuery.ts","contexts/theme.tsx","hooks/useTheme.ts","components/pages/Info.tsx","components/pages/Chat.tsx","components/App/App.tsx","components/MorphingIcon/Icons.ts","components/MorphingIcon/MorphingIcon.tsx","components/Chat/ChatInput.tsx","components/ToggleButton/ToggleButton.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","voidContext","name","status","messages","push","message","console","warn","MessageContext","React","createContext","AnimatedItem","posed","span","exit","rotateX","opacity","enter","unselected","position","width","height","flip","selected","left","bottom","AnimatedList","useState","setSelected","useContext","listRef","useRef","isAnImageURL","body","test","useEffect","length","current","scrollIntoView","behavior","className","map","id","date","user","pose","key","onClick","onSelectMessage","moment","format","src","alt","ref","useMediaQuery","Themes","theme","dark","setTheme","ThemeContext","useTheme","toggleTheme","useCallback","newTheme","light","localStorage","setItem","Info","useLocation","pathname","href","target","rel","to","state","from","Chat","RouteContainer","div","App","render","log","icon","path","component","checked","toggle","checkedIcon","uncheckedIcon","big","Icons","arrow","info","chat","send","sun","moon","drink","clear","searching","favorite","morphTransition","tween","duration","pipe","interpolate","Paths","Object","entries","reduce","paths","d","transition","Icon","MorphingIcon","viewBox","ChatInput","setMessage","inputRef","focus","placeholder","value","onChange","event","onKeyPress","title","ToggleButton","size","ReactDOM","basename","process","children","themeHandler","loadedTheme","getItem","Provider","setStatus","names","Math","floor","random","getRandonName","setMessages","unsubscribe","app","initializeApp","config","firestore","collection","orderBy","onSnapshot","querySnapshot","newMessages","forEach","doc","data","err","error","messageHandler","newMessage","Date","getTime","add","catch","e","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kWAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,4CCPSC,G,YAXQ,CACnBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iB,8NCUnB,IAOMC,EAA8B,CAChCC,KAAM,GACNC,OAAQ,GACRC,SAAU,GACVC,KAAM,SAACC,GAAD,OAAqBC,QAAQC,KAAK,8BAEtCC,EAAiBC,IAAMC,cAA8BV,G,iBCpBrDW,G,MAAeC,IAAMC,KAAK,CAC5BC,KAAM,CAAEC,QAAS,QAASC,QAAS,GACnCC,MAAO,CAAEF,QAAS,OAAQC,QAAS,GACnCE,WAAY,CACRC,SAAU,WACVC,MAAO,OACPC,OAAQ,OACRC,MAAM,GAEVC,SAAU,CACNJ,SAAU,QACVK,KAAM,EACNC,OAAQ,EACRH,MAAM,MA2DCI,EAvDuB,SAAC,GAA0B,IAAxBvB,EAAuB,EAAvBA,SAAUD,EAAa,EAAbA,OAAa,EAC5ByB,qBAD4B,mBACrDJ,EADqD,KAC3CK,EAD2C,KAEpD3B,EAAS4B,qBAAWrB,GAApBP,KACF6B,EAAUC,iBAAO,MAKjBC,EAAe,WAAiC,IAAhCC,EAA+B,uDAAhB,GACjC,MAAO,+BAA+BC,KAAKD,IAQ/C,OALAE,qBAAU,WACFhC,EAASiC,QAAUN,GACnBA,EAAQO,QAAQC,eAAe,CAAEC,SAAU,aAEhD,CAACpC,EAAU2B,IAEV,yBAAKU,UAAU,QACX,kBAAC,IAAD,KACKrC,EAASsC,KAAI,SAACpC,GAAsB,IACzBqC,EAAyBrC,EAAzBqC,GAAIT,EAAqB5B,EAArB4B,KAAMU,EAAetC,EAAfsC,KAAMC,EAASvC,EAATuC,KACxB,OACI,kBAACjC,EAAD,CACIkC,KAAMtB,IAAamB,GAAMV,EAAaC,GAAQ,WAAa,aAC3DO,UAAS,kBAAajB,IAAamB,EAAK,WAAa,GAA5C,YACLzC,IAAS2C,EAAO,MAAQ,IAE5BE,IAAG,iBAAYJ,GACfK,QAAS,kBAzBT,SAACL,GACAd,EAAjBL,IAAamB,EAAgB,KAChBA,GAuBkBM,CAAgBN,KAC/B,yBAAKF,UAAS,YACV,uBAAGA,UAAU,UACT,0BAAMA,UAAU,QAAQI,GACxB,0BAAMJ,UAAU,QAAQS,IAAON,GAAMO,OAAO,SAA5C,SAEHlB,EAAaC,GACV,yBACIkB,IAAKlB,EACLmB,IAAI,0BACJZ,UAAU,cAGd,uBAAGA,UAAU,QAAQP,GACtB,UAMvB,0BAAMO,UAAU,QAAQa,IAAKvB,IACjB,aAAX5B,GAAyB,yC,QChEvBoD,ICbVC,a,iBAAAA,E,cAQL,IAAMvD,EAA4B,CAC9BwD,MAAOD,EAAOE,KACdC,SAAU,SAAAF,MAERG,EAAelD,IAAMC,cAA4BV,GCKxC4D,MAhBf,WAAqB,IAAD,EACY/B,qBAAW8B,GAA/BH,EADQ,EACRA,MAAOE,EADC,EACDA,SAETG,EAAcC,uBAAY,WAC5B,IAAMC,EAAWP,IAAUD,EAAOS,MAAQT,EAAOE,KAAOF,EAAOS,MAC/DN,EAASK,GAELE,cAAcA,aAAaC,QAAQ,QAASH,KACjD,CAACP,EAAOE,IAEX,MAAO,CACHF,QACAK,cACAN,WCwBOY,G,YAnCQ,WACnB,IAAM/E,EAAWgF,cAEjB,OAAOhF,GAAY,UAAAA,EAASiF,SACxB,yBAAK7B,UAAU,QACX,yBAAKA,UAAU,SACX,uBAAGA,UAAU,WAAb,gBACA,6BACA,uBAAGA,UAAU,WAAb,kBACA,uBAAGA,UAAU,WAAb,mBACA,uBAAGA,UAAU,WAAb,qBACA,uBAAGA,UAAU,WAAb,qBACA,uBAAGA,UAAU,WAAb,oBACA,uBAAGA,UAAU,WAAb,2BACA,uBAAGA,UAAU,WAAb,qBACA,6BACA,uBACIA,UAAU,OACV8B,KAAK,mDACLC,OAAO,SACPC,IAAI,uBACJ,yBAAKpB,IAAI,aAAaD,IAAG,UAnBuB,kBAmBvB,8BAKrC,kBAAC,IAAD,CACIsB,GAAI,CACAJ,SAAS,QACTK,MAAO,CAAEC,KAAMvF,QCJhBwF,EAxBQ,WAAO,IAAD,EACgB/C,qBAAWrB,GAA5CJ,EADiB,EACjBA,KAAMD,EADW,EACXA,SAAUD,EADC,EACDA,OAAQD,EADP,EACOA,KAC1Bb,EAAWgF,cACjB,OAAOhF,GAAa,UAAAA,EAASiF,UAAwB,MAAAjF,EAASiF,SAY1D,kBAAC,IAAD,CACII,GAAI,CACAJ,SAAS,QACTK,MAAO,CAAEC,KAAMvF,MAdvB,yBAAKoD,UAAU,QACX,yBAAKA,UAAU,SACX,wDAC8B,0BAAMA,UAAU,QAAQvC,GADtD,iBAGA,8EAEJ,kBAAC,EAAD,CAAcE,SAAUA,EAAUD,OAAQA,IAC1C,kBAAC,EAAD,CAAWE,KAAMA,MCTvByE,EAAiBjE,IAAMkE,IAAI,CAC7B7D,MAAO,CAAED,QAAS,GAClBF,KAAM,CAAEE,QAAS,KAoEN+D,EAjEO,WAAO,IAAD,EACenB,IAA/BJ,EADgB,EAChBA,MAAOD,EADS,EACTA,OAAQM,EADC,EACDA,YACvB,OACI,yBAAKrB,UAAWgB,IAAUD,EAAOE,KAAO,aAAe,eACnD,kBAAC,IAAD,CACIuB,OAAQ,YAAmB,IAAhB5F,EAAe,EAAfA,SACP,OACIkB,QAAQ2E,IAAI7F,GAER,yBAAKoD,UAAU,aACX,0BAAMA,UAAU,UAChB,yBAAKA,UAAU,WACX,wBAAIA,UAAU,SAAd,kBACA,yBAAKA,UAAU,WACX,0BAAMA,UAAU,OAChB,kBAAC,IAAD,CACIA,UAAU,OACViC,GAAE,UACE,UAAArF,EAASiF,UACT,MAAAjF,EAASiF,SADT,kBAKJ,kBAAC,EAAD,CACIjD,MAAO,GACPC,OAAQ,GACR6D,KACI,UAAA9F,EAASiF,UACT,MAAAjF,EAASiF,SADT,mBASpB,kBAAC,IAAD,KACI,kBAACQ,EAAD,CACI/B,IAAG,yBAAoB1D,EAAS0D,KAChCN,UAAU,mBACV,kBAAC,IAAD,CAAQpD,SAAUA,EAAU0D,IAAK,UAC7B,kBAAC,IAAD,CAAOqC,KAAI,QAAWC,UAAWR,EAAM9B,IAAI,SAC3C,kBAAC,IAAD,CAAOqC,KAAI,QAAWC,UAAWjB,EAAMrB,IAAI,SAC3C,kBAAC,IAAD,CAAOsC,UAAWR,EAAM9B,IAAI,eAIxC,yBAAKN,UAAU,UACX,kBAAC,EAAD,CACI6C,QAAS7B,IAAUD,EAAOS,MAC1BsB,OAAQzB,EACR0B,YAAY,MACZC,cAAc,OACdC,KAAG,W,eC5C5BC,EAtBD,CACVC,MAAO,4EACPC,KACI,4NACJC,KACI,sHAEJC,KACI,2FACJC,IACI,4ZACJC,KAAM,8DACNC,MACI,gGACJC,MACI,yMACJC,UACI,sKACJC,SACI,qM,oOCVR,IAAMC,EAA8B,SAAC,GAAD,IAAG1B,EAAH,EAAGA,KAAMF,EAAT,EAASA,GAAT,OAChC6B,YAAM,CACF3B,KAAM,EACNF,GAAI,EACJ8B,SAAU,MACXC,KAAKC,sBAAY9B,EAAMF,KAEpBiC,EAAQC,OAAOC,QAAQlB,GAAOmB,QAAO,SAACC,EAAD,GAA0B,IAAD,mBAAhB7G,EAAgB,KAC9DiF,EAAO,CACT6B,EAFgE,KAGhEC,WAAYX,GAEhB,O,yVAAO,IAAKS,EAAZ,eAAoB7G,EAAOiF,MAC5B,IAEG+B,EAAOrG,IAAMuE,KAAKuB,GAeTQ,EARuB,SAAC,GAA6B,IAA3BhC,EAA0B,EAA1BA,KAAM7D,EAAoB,EAApBA,OAAQD,EAAY,EAAZA,MACnD,OACI,yBAAKoB,UAAU,eAAepB,MAAOA,EAAOC,OAAQA,EAAQ8F,QAAQ,aAChE,kBAACF,EAAD,CAAMpE,KAAMqC,MCcTkC,G,MAzCoB,SAAC,GAAc,IAAZhH,EAAW,EAAXA,KAAW,EACfuB,mBAAS,IADM,mBACtCtB,EADsC,KAC7BgH,EAD6B,KAEvCC,EAAWvF,iBAAyB,MAuB1C,OAHAI,qBAAU,WACFmF,GAAiC,OAArBA,EAASjF,SAAkBiF,EAASjF,QAAQkF,UAC7D,IAEC,yBAAK/E,UAAU,aACX,2BACIgF,YAAY,iBACZC,MAAOpH,EACPqH,SA1BU,SAACC,GACnB,IAAMF,EAAQE,EAAMpD,OAAOkD,MAC3BJ,EAAWI,IAyBHpE,IAAKiE,EACLM,WAxBO,SAACD,GACE,UAAdA,EAAM7E,KAAmBzC,IACzBD,EAAKC,GACLgH,EAAW,QAuBX,4BAAQQ,MAAM,OAAOrF,UAAU,aAAaO,QApBjC,SAAC4E,GACZtH,GACAD,EAAKC,GACLgH,EAAW,KAEPC,GAAiC,OAArBA,EAASjF,SAAkBiF,EAASjF,QAAQkF,UAgBxD,kBAAC,EAAD,CAAcrC,KAAM7E,EAAU,OAAS,aCnBxCyH,G,MAZuB,SAAC,GAA0D,IAAxDzC,EAAuD,EAAvDA,QAASC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,cAAeC,EAAU,EAAVA,IAI5EsC,EAAOtC,EAAM,GAAK,GACxB,OACI,4BAAQ1C,QALS,SAAC4E,GAClBrC,KAI+B9C,UAAS,uBAAkBiD,EAAM,MAAQ,KACpE,kBAAC,EAAD,CAAcrE,MAAO2G,EAAM1G,OAAQ0G,EAAM7C,KAAMG,EAAUE,EAAcC,O,MCTnFwC,IAAShD,OACL,kBAAC,IAAD,CAAeiD,SAAUC,mBACrB,mBTIwB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACpBxG,mBAAS4B,EAAOE,MADI,mBACvCD,EADuC,KAChCE,EADgC,KAGxC0E,EAAe,CACjB5E,QACAE,YAUJ,OANAvB,qBAAU,WACN,GAAI8B,aAAc,CACd,IAAMoE,EAAcpE,aAAaqE,QAAQ,SACrCD,IAAgB9E,EAAOE,MAAQ4E,IAAgB9E,EAAOS,OAAON,EAAS2E,MAE/E,IACI,kBAAC1E,EAAa4E,SAAd,CAAuBd,MAAOW,GAAeD,KSnBhD,KACI,mBZqBsB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SAAe,EACpBxG,mBAAS,eADW,mBACzCzB,EADyC,KACjCsI,EADiC,OAEjC7G,mBAjBG,WAClB,IAAM8G,EAAQ,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,QAG5D,OAAOA,EAFaC,KAAKC,MAAMD,KAAKE,SAAWH,EAAMrG,SAe7ByG,IAAjB5I,EAFyC,sBAGhB0B,mBAAyB,IAHT,mBAGzCxB,EAHyC,KAG/B2I,EAH+B,KAahD3G,qBAAU,WACNqG,EAAU,YACV,IAAIO,EAAc,kBAAMzI,QAAQC,KAAK,oBACrC,IACIyI,IAAIC,cAAcC,GAKlBH,EAJcC,IACTG,YACAC,WAAW,kBACXC,QAAQ,QACOC,YAChB,SAAAC,GACI,IAAMC,EAAc,GACpBD,EAAcE,SAAQ,SAAAC,GAClBF,EAAYpJ,K,yVAAZ,IAAsBsJ,EAAIC,OAA1B,CAAkCjH,GAAIgH,EAAIhH,SAE9CoG,EAAYU,GACZhB,EAAU,cAEd,SAAAoB,GACIpB,EAAUoB,EAAIvJ,SACdC,QAAQuJ,MAAR,6BAAoCD,OAG9C,MAAOA,GACLtJ,QAAQuJ,MAAMD,GAGlB,OAAOb,IACR,CAACP,EAAWM,IACf,IAAMgB,EAAiB,CACnB7J,OACAC,SACAC,WACAC,KAzCS,SAAC6B,GACV,IAAM8H,EAAa,CAAEnH,KAAM3C,EAAMgC,OAAMU,MAAM,IAAIqH,MAAOC,WACpCjB,IAAIG,YAAYC,WAAW,kBACjCc,IAAIH,GAAYI,OAAM,SAAAC,GAChC5B,EAAU,iCAuClB,OAAO,kBAAChI,EAAe+H,SAAhB,CAAyBd,MAAOqC,GAAiB3B,KYrEhD,KACI,kBAAC,EAAD,SAIZkC,SAASC,eAAe,SdwHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.735ad4cd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const firebaseConfig = {\n    apiKey: 'AIzaSyDD9XbN82AKMIgGtklwA-i_uaxSm9Mbob0',\n    authDomain: 'portfolio-816a0.firebaseapp.com',\n    databaseURL: 'https://portfolio-816a0.firebaseio.com',\n    projectId: 'portfolio-816a0',\n    storageBucket: 'portfolio-816a0.appspot.com',\n    messagingSenderId: '449065180107',\n    appId: '1:449065180107:web:5abf3b9c43ba703cf9f44e',\n    measurementId: 'G-JSMMWV7Y7L',\n};\n\nexport default firebaseConfig;\n","import React, { useState, useEffect } from 'react';\nimport app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport config from '../configs/firebase';\n\nexport interface Message {\n    id: string;\n    user: string;\n    body: string;\n    date: string;\n}\ninterface MessageContext {\n    name: string;\n    status: string;\n    messages: Array<Message>;\n    push: (message: string) => void;\n}\nconst getRandonName = (): string => {\n    const names = ['Chile', 'Ivito', 'Joaco', 'Mauri', 'Migue', 'Toti'];\n    const randomIndex = Math.floor(Math.random() * names.length);\n\n    return names[randomIndex];\n};\n\nconst voidContext: MessageContext = {\n    name: '',\n    status: '',\n    messages: [],\n    push: (message: string) => console.warn('Firebase not initialized'),\n};\nconst MessageContext = React.createContext<MessageContext>(voidContext);\n\nconst MessageProvider: React.FC = ({ children }) => {\n    const [status, setStatus] = useState('initalizing');\n    const [name] = useState(getRandonName());\n    const [messages, setMessages] = useState<Array<Message>>([]);\n\n    const push = (body  : string) => {\n        const newMessage = { user: name, body, date: new Date().getTime() };\n        let collectionRef = app.firestore().collection('real-time-chat');\n        collectionRef.add(newMessage).catch(e => {\n            setStatus(`Can't push a new message`);\n        });\n    };\n    // load last theme\n    useEffect(() => {\n        setStatus('fetching');\n        let unsubscribe = () => console.warn('fake unsuscribe');\n        try {\n            app.initializeApp(config);\n            const query = app\n                .firestore()\n                .collection('real-time-chat')\n                .orderBy('date');\n            unsubscribe = query.onSnapshot(\n                querySnapshot => {\n                    const newMessages = [];\n                    querySnapshot.forEach(doc => {\n                        newMessages.push({ ...doc.data(), id: doc.id });\n                    });\n                    setMessages(newMessages);\n                    setStatus('fetched');\n                },\n                err => {\n                    setStatus(err.message);\n                    console.error(`Encountered error: ${err}`);\n                },\n            );\n        } catch (err) {\n            console.error(err);\n        }\n        // Remove this listener.\n        return unsubscribe;\n    }, [setStatus, setMessages]);\n    const messageHandler = {\n        name,\n        status,\n        messages,\n        push,\n    };\n    return <MessageContext.Provider value={messageHandler}>{children}</MessageContext.Provider>;\n};\n\nexport { MessageContext, MessageProvider };\n","import React, { useState, useRef, useEffect, useContext } from 'react';\nimport posed, { PoseGroup } from 'react-pose';\nimport { Message, MessageContext } from '../../contexts/messages';\nimport moment from 'moment';\nimport './AnimatedList.scss';\n\ninterface Props {\n    status: string;\n    messages: Array<Message>;\n}\n\nconst AnimatedItem = posed.span({\n    exit: { rotateX: '90deg', opacity: 0 },\n    enter: { rotateX: '0deg', opacity: 1 },\n    unselected: {\n        position: 'relative',\n        width: '100%',\n        height: 'auto',\n        flip: true,\n    },\n    selected: {\n        position: 'fixed',\n        left: 0,\n        bottom: 0,\n        flip: true,\n    },\n});\n\nconst AnimatedList: React.FC<Props> = ({ messages, status }) => {\n    const [selected, setSelected] = useState<string>();\n    const { name } = useContext(MessageContext);\n    const listRef = useRef(null);\n    const onSelectMessage = (id: string) => {\n        if (selected === id) setSelected('id');\n        else setSelected(id);\n    };\n    const isAnImageURL = (body: string = ''): boolean => {\n        return /(https?:\\/\\/.*\\.(?:png|jpg))/.test(body);\n    };\n\n    useEffect(() => {\n        if (messages.length && listRef) {\n            listRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }, [messages, listRef]);\n    return (\n        <div className=\"list\">\n            <PoseGroup>\n                {messages.map((message: Message) => {\n                    const { id, body, date, user } = message;\n                    return (\n                        <AnimatedItem\n                            pose={selected === id && isAnImageURL(body) ? 'selected' : 'unselected'}\n                            className={`message ${selected === id ? 'selected' : ''} ${\n                                name === user ? 'own' : ''\n                            }`}\n                            key={`message${id}`}\n                            onClick={() => onSelectMessage(id)}>\n                            <div className={`content `}>\n                                <p className=\"header\">\n                                    <span className=\"user\">{user}</span>\n                                    <span className=\"date\">{moment(date).format('HH:mm')} Hs.</span>\n                                </p>\n                                {isAnImageURL(body) ? (\n                                    <img\n                                        src={body}\n                                        alt=\"This message is an URL \"\n                                        className=\"isAnImage\"\n                                    />\n                                ) : (\n                                    <p className=\"body\">{body}</p>\n                                )}{' '}\n                            </div>\n                        </AnimatedItem>\n                    );\n                })}\n            </PoseGroup>\n            <span className=\"dummy\" ref={listRef} />\n            {status === 'fetching' && <p>fetching</p>}\n        </div>\n    );\n};\n\nexport default AnimatedList;\n","import { useLayoutEffect, useState } from 'react';\n\nfunction useMediaQuery(mediaQuery: string): boolean {\n    const initialValue = window.matchMedia(mediaQuery).matches;\n    const [matches, setMatches] = useState(initialValue);\n    useLayoutEffect(() => {\n        const mediaQueryList = window.matchMedia(mediaQuery);\n        const listener = (e: MediaQueryListEvent) => setMatches(e.matches);\n        mediaQueryList.addListener(listener);\n        return () => mediaQueryList.removeListener(listener);\n    }, [mediaQuery]);\n\n    return matches;\n}\nexport default useMediaQuery;\n","import React, { useState, useEffect } from 'react';\nenum Themes {\n    dark = 'dark',\n    light = 'light',\n}\ninterface ThemeContext {\n    theme: Themes.dark | Themes.light;\n    setTheme: (theme: Themes.dark | Themes.light) => void;\n}\nconst voidContext: ThemeContext = {\n    theme: Themes.dark,\n    setTheme: theme => {},\n};\nconst ThemeContext = React.createContext<ThemeContext>(voidContext);\n\nconst ThemeProvider: React.FC = ({ children }) => {\n    const [theme, setTheme] = useState(Themes.dark);\n\n    const themeHandler = {\n        theme,\n        setTheme,\n    };\n\n    // load last theme\n    useEffect(() => {\n        if (localStorage) {\n            const loadedTheme = localStorage.getItem('theme');\n            if (loadedTheme === Themes.dark || loadedTheme === Themes.light) setTheme(loadedTheme);\n        }\n    }, []);\n    return <ThemeContext.Provider value={themeHandler}>{children}</ThemeContext.Provider>;\n};\n\nexport { Themes, ThemeContext, ThemeProvider };\n","import { useContext, useCallback } from 'react';\nimport { ThemeContext, Themes } from '../contexts/theme';\nfunction useTheme() {\n    const { theme, setTheme } = useContext(ThemeContext);\n\n    const toggleTheme = useCallback(() => {\n        const newTheme = theme === Themes.light ? Themes.dark : Themes.light;\n        setTheme(newTheme);\n\n        if (localStorage) localStorage.setItem('theme', newTheme);\n    }, [theme, setTheme]);\n\n    return {\n        theme,\n        toggleTheme,\n        Themes,\n    };\n}\nexport default useTheme;\n","import React from 'react';\nimport { Redirect, useLocation } from 'react-router-dom';\nimport './styles.scss';\n\nconst Info: React.FC = () => {\n    const location = useLocation();\n    const urlPrefix = process.env.NODE_ENV === 'development' ? '' : '/real-time-chat';\n    return location && location.pathname === `/info` ? (\n        <div className=\"info\">\n            <div className=\"about\">\n                <b className=\"appName\">Dependencies</b>\n                <hr />\n                <p className=\"version\">React: 16.10.2</p>\n                <p className=\"version\">Firebase: 7.2.1</p>\n                <p className=\"version\">Node-sass: 4.12.0</p>\n                <p className=\"version\">React-pose: 4.0.9</p>\n                <p className=\"version\">Popmotion: 8.7.0</p>\n                <p className=\"version\">React-router-dom: 5.1.2</p>\n                <p className=\"version\">Typescript: 3.6.4</p>\n                <hr />\n                <a\n                    className=\"repo\"\n                    href=\"https://github.com/JoaquinCicetti/real-time-chat\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <img alt=\"repository\" src={`${urlPrefix}/GitHub-Mark-32px.png`} />\n                </a>\n            </div>\n        </div>\n    ) : (\n        <Redirect\n            to={{\n                pathname: `/chat`,\n                state: { from: location },\n            }}\n        />\n    );\n};\n\nexport default Info;\n","import React, { useContext } from 'react';\nimport { Redirect, useLocation } from 'react-router-dom';\nimport { AnimatedList, ChatInput } from '..';\nimport './styles.scss';\nimport { MessageContext } from '../../contexts/messages';\nconst Chat: React.FC = () => {\n    const { push, messages, status, name } = useContext(MessageContext);\n    const location = useLocation();\n    return location && (location.pathname === `/chat` || location.pathname === `/`) ? (\n        <div className=\"chat\">\n            <div className=\"intro\">\n                <p>\n                    Hi! From now your name is <span className=\"name\">{name}</span> 😊\n                </p>\n                <p>(Open another window to see this chat working)</p>\n            </div>\n            <AnimatedList messages={messages} status={status} />\n            <ChatInput push={push} />\n        </div>\n    ) : (\n        <Redirect\n            to={{\n                pathname: `/info`,\n                state: { from: location },\n            }}\n        />\n    );\n};\n\nexport default Chat;\n","import React from 'react';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport posed, { PoseGroup } from 'react-pose';\nimport { useTheme } from '../../hooks';\nimport { ToggleButton, MorphingIcon } from '../';\nimport './App.scss';\nimport Info from '../pages/Info';\nimport Chat from '../pages/Chat';\nconst RouteContainer = posed.div({\n    enter: { opacity: 1 },\n    exit: { opacity: 0 },\n});\n\nconst App: React.FC = () => {\n    const { theme, Themes, toggleTheme } = useTheme();\n    return (\n        <div className={theme === Themes.dark ? 'theme-dark' : 'theme-light'}>\n            <Route\n                render={({ location }) => {\n                    return (\n                        console.log(location),\n                        (\n                            <div className=\"container\">\n                                <span className=\"notch\" />\n                                <div className=\"welcome\">\n                                    <h1 className=\"title\">Real-time chat</h1>\n                                    <div className=\"divider\">\n                                        <span className=\"hr\" />\n                                        <Link\n                                            className=\"link\"\n                                            to={`${\n                                                location.pathname === `/chat` ||\n                                                location.pathname === `/`\n                                                    ? `/info`\n                                                    : `/chat`\n                                            }`}>\n                                            <MorphingIcon\n                                                width={32}\n                                                height={32}\n                                                icon={\n                                                    location.pathname === `/chat` ||\n                                                    location.pathname === `/`\n                                                        ? `info`\n                                                        : `chat`\n                                                }\n                                            />\n                                        </Link>\n                                    </div>\n                                </div>\n                                <PoseGroup>\n                                    <RouteContainer\n                                        key={`routerContainer${location.key}`}\n                                        className=\"routerContainer\">\n                                        <Switch location={location} key={'switch'}>\n                                            <Route path={`/chat`} component={Chat} key=\"chat\" />\n                                            <Route path={`/info`} component={Info} key=\"info\" />\n                                            <Route component={Chat} key=\"default\" />\n                                        </Switch>\n                                    </RouteContainer>\n                                </PoseGroup>\n                                <div className=\"footer\">\n                                    <ToggleButton\n                                        checked={theme === Themes.light}\n                                        toggle={toggleTheme}\n                                        checkedIcon=\"sun\"\n                                        uncheckedIcon=\"moon\"\n                                        big\n                                    />\n                                </div>\n                            </div>\n                        )\n                    );\n                }}\n            />\n        </div>\n    );\n};\n\nexport default App;\n","const Icons = {\n    arrow: 'M28.244 42h12.755v6H18V25.001h6v12.758l19.757-19.757L48 22.244 28.244 42z',\n    info:\n        'M32 0a32 32 0 1 0 32 32A32.037 32.037 0 0 0 32 0zm-2.977 15.037a3.62 3.62 0 0 1 4.96 0 3.509 3.509 0 0 1 1.02 2.469 3.5 3.5 0 1 1-7 0 3.512 3.512 0 0 1 1.02-2.469zm6.98 34.97h-8v-4H30V28.024h-1.996v-4H34v21.985h2.004z',\n    chat:\n        'M4.7 59.4l19.1-7.6a37.1 37.1 0 0 0 8.2.9c16.6 0 30-10.7 30-24s-13.4-24-30-24S2 15.4 2 28.6c0 6.7 3.5 12.8 9.1 17.2z',\n\n    send:\n        'M33 21.996V10l28 20-28 20V38c-11.133.004-21.271.434-30 16 0-9.887 1.45-31.729 30-32.004z',\n    sun:\n        'M62 30H47.9a15.9 15.9 0 0 0-3.2-7.8l10-10a2 2 0 0 0-2.8-2.8l-10 10a15.9 15.9 0 0 0-7.9-3.3V2a2 2 0 0 0-4 0v14.2a15.9 15.9 0 0 0-7.8 3.2l-10-10a2 2 0 1 0-2.8 2.8l10 10a15.9 15.9 0 0 0-3.2 7.8H2a2 2 0 1 0 0 4h14.2a15.9 15.9 0 0 0 3.2 7.8l-10 10a2 2 0 1 0 2.8 2.8l10-10a15.9 15.9 0 0 0 7.8 3.3V62a2 2 0 0 0 4 0V47.9a15.9 15.9 0 0 0 7.8-3.2l10 10a2 2 0 1 0 2.8-2.8l-10-10a15.9 15.9 0 0 0 3.3-7.9H62a2 2 0 1 0 0-4z',\n    moon: 'M33.9 11.9A16.8 16.8 0 0 1 12 35a20.1 20.1 0 1 0 21.9-23.1z',\n    drink:\n        'M60.7 2.7A1 1 0 0 0 60 1H4a1 1 0 0 0-.7 1.7L30 30v29H18a2 2 0 0 0 0 4h28a2 2 0 0 0 0-4H34V30z',\n    clear:\n        'M53.122 48.88L36.243 32l16.878-16.878a3 3 0 0 0-4.242-4.242L32 27.758l-16.878-16.88a3 3 0 0 0-4.243 4.243l16.878 16.88-16.88 16.88a3 3 0 0 0 4.243 4.241L32 36.243l16.878 16.88a3 3 0 0 0 4.244-4.243z',\n    searching:\n        'M61.122 56.88L41.54 37.284l-.037.037a22.01 22.01 0 1 0-4.173 4.175l-.031.031L56.878 61.12a3 3 0 0 0 4.244-4.242zM24 40a16 16 0 1 1 16-16 16.002 16.002 0 0 1-16 16z',\n    favorite:\n        'M32.8 58.9C45.4 57 64 34.4 64 22.6 64 13.5 57.2 7 48 7c-7.8 0-14.2 5.9-16 10.5C30.2 12.9 23.8 7 16 7 6.8 7 0 13.5 0 22.6 0 34.4 18.6 57 31.2 58.9a5.384 5.384 0 0 0 .8.1 3.217 3.217 0 0 1 .8-.1z',\n};\n\nexport default Icons;\n\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d << this article saved my life\n","import React from 'react';\nimport posed from 'react-pose';\nimport { tween } from 'popmotion';\nimport { interpolate } from 'flubber';\nimport Icons from './Icons';\nimport './MorphingIcon.scss';\n\ntype Transition = ({ from, to }: { from: number; to: number }) => any;\n\nconst morphTransition: Transition = ({ from, to }) =>\n    tween({\n        from: 0,\n        to: 1,\n        duration: 250,\n    }).pipe(interpolate(from, to));\n\n    const Paths = Object.entries(Icons).reduce((paths, [name, path]) => {\n    const icon = {\n        d: path,\n        transition: morphTransition,\n    };\n    return { ...paths, [name]: icon };\n}, {});\n\nconst Icon = posed.path(Paths);\n\ninterface Props {\n    icon: string;\n    width?: number;\n    height?: number;\n}\nconst MorphingIcon: React.FC<Props> = ({ icon, height, width }) => {\n    return (\n        <svg className=\"morphingIcon\" width={width} height={height} viewBox=\"0 0 64 64\">\n            <Icon pose={icon} />\n        </svg>\n    );\n};\n\nexport default MorphingIcon;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { MorphingIcon } from '..';\nimport './ChatInput.scss';\n\ninterface Props {\n    push: (message: string) => void;\n}\nconst ChatInput: React.FC<Props> = ({ push }) => {\n    const [message, setMessage] = useState('');\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    const onInputChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        const value = event.target.value;\n        setMessage(value);\n    };\n    const onKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === 'Enter' && message) {\n            push(message);\n            setMessage('');\n        }\n    };\n    const clearInput = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n        if (message) {\n            push(message);\n            setMessage('');\n        } else {\n            if (inputRef && inputRef.current !== null) inputRef.current.focus();\n        }\n    };\n    useEffect(() => {\n        if (inputRef && inputRef.current !== null) inputRef.current.focus();\n    }, []);\n    return (\n        <div className=\"chatInput\">\n            <input\n                placeholder=\"Type something\"\n                value={message}\n                onChange={onInputChange}\n                ref={inputRef}\n                onKeyPress={onKeyPress}\n            />\n            <button title=\"Send\" className=\"sendButton\" onClick={clearInput}>\n                <MorphingIcon icon={message ? 'send' : 'chat'} />\n            </button>\n        </div>\n    );\n};\n\nexport default ChatInput;\n","import React from 'react';\nimport { MorphingIcon } from '../';\nimport './ToggleButton.scss';\n\ninterface Props {\n    checked: boolean;\n    toggle: () => void;\n    checkedIcon: string;\n    uncheckedIcon: string;\n    big?: boolean;\n}\nconst ToggleButton: React.FC<Props> = ({ checked, toggle, checkedIcon, uncheckedIcon, big }) => {\n    const handleChange = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n        toggle();\n    };\n    const size = big ? 32 : 18;\n    return (\n        <button onClick={handleChange} className={`toggleButton ${big ? 'big' : ''}`}>\n            <MorphingIcon width={size} height={size} icon={checked ? checkedIcon : uncheckedIcon} />\n        </button>\n    );\n};\n\nexport default ToggleButton;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { App } from './components';\nimport { ThemeProvider } from './contexts/theme';\nimport { MessageProvider } from './contexts/messages';\nimport './index.scss';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <ThemeProvider>\n            <MessageProvider>\n                <App />\n            </MessageProvider>\n        </ThemeProvider>\n    </BrowserRouter>,\n    document.getElementById('root'),\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}